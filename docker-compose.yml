version: '3.4'

x-app: &default-app
  image: backend-image:latest
  volumes:
    - ./api:/api
    - ./docker/static:/api/static
    - type: bind
      source: ./api/.env
      target: /api/.env
  restart: unless-stopped
  depends_on:
    - timedb
    - cache
  environment:
    WAIT_HOSTS: timedb:5432, cache:6379
    WAIT_TIMEOUT: 60
    WAIT_AFTER: 5

x-celery: &celery-app
  <<: *default-app
  depends_on:
    - api
  environment:
    WAIT_HOSTS: api:8000
    WAIT_TIMEOUT: 60
    WAIT_AFTER: 5


services:
  timedb:
    image: timescale/timescaledb:latest-pg13
    restart: unless-stopped
    volumes:
      - ./docker/db/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: foliop4sswd
      POSTGRES_DB: folioman
    ports:
      - "127.0.0.1:15432:5432"
  cache:
    image: redis:alpine
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - ./docker/cache:/data
    ports:
      - "127.0.0.1:16379:6379"
  ui:
    build: ./ui
    user: node
    volumes:
      - ./ui:/home/node/ui
      - node_modules:/home/node/ui/node_modules
    working_dir: /home/node/ui
    command: sh -c "yarn install && npm run build && npm run start"
  api:
    build: ./api
    command: bash -c "/wait &&
                      /venv/bin/python /api/manage.py migrate --noinput &&
                      /venv/bin/python manage.py collectstatic --noinput &&
                      /venv/bin/gunicorn wsgi --bind 0.0.0.0:8000"
    <<: *default-app
    depends_on:
      - timedb
      - cache
  web:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - ./docker/static:/api/static
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - ui
  beat:
    <<: *celery-app
    command: bash -c "/wait && rm -f /tmp/beat.pid && /venv/bin/celery -A taskman beat -l INFO --pidfile=/tmp/beat.pid"

  worker:
    <<: *celery-app
    command: bash -c "/wait && /venv/bin/celery -A taskman worker -l INFO"
volumes:
  node_modules:
